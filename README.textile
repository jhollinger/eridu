h1. Eridu

A Sinatra blogging app for the classy developer. Though inspired by "Enki":https://github.com/xaviershay/enki, it tries to be even cleaner, while offering more features.

h2. Quick Start

<pre>
git clone git://github.com/jhollinger/eridu.git eridu
cd eridu
bundle install    # Install all the required gems

# Copy and edit configuration files to taste
cp config/database.yml.template config/database.yml
cp config/eridu.yml.template config/eridu.yml

rake db:migrate   # Initialize or update the database
ruby eridu.rb     # Start the server at http://localhost:4567
</pre>

h3. Deploying to Production

Same as above, except instead of _ruby eridu.rb_, do:

<pre>
cp config/thin.yml.template config/thin.yml

bundle exec thin start -C config/thin.yml
</pre>

h2. Philosophy

* Sinatra is perfect for this; Ruby on Rails is overkill
* /yyyy/mm/dd/post-title is a good URL for your posts
* Atom is a good publishing protocol
* Google does search better than you or I
* Disqus does comments better (or at least easier) than you or I
* You don’t need a plugin system when you’ve got a lean, clean code base
* This is just your blog - Basic Auth is good enough for the admin area
* Textile is awesome
* Everyone wants awesome media upload, a responsive layout, and syntax highlighting
* Few really want multiple sites, authors, skins and arcane templating languages
* You should be running Ruby 2.0 by now

Framework choices aside, Eridu differs from its progenitor, Enki, mainly in the number of bundled features. These include optional Disqus integration, a responsive layout, simple yet elegent media management, and syntax highlighting. While Enki leaves these "extras" as an exercise to the reader, Eridu pragmatically includes these de facto necessities.

h2. Syntax Highlighting with Coderay Plugin for Textile

<pre>
# Single line
@[ruby]puts "It's ruby codez!"@

# Multi-line
bc[ruby].. puts "It's ruby codez!"
puts "and more"

puts "and more"

p. Back to a Textile paragraph
</pre>

h2. Compatibility

Tested on MySQL, Postgres, and SQLite. Heroku should be possible, but is untested.

h2. License

Apache - See LICENSE

Admin design heavily inspired by "Enki":https://github.com/xaviershay/enki and "Habari":http://www.habariproject.org/en/
